[{"id":0,"href":"/docs/about/","title":"About","section":"Docs","content":"I am Kapil Reddy. I am a builder and storyteller.\\\nI started my journey as a Javascripter. Hacked a bunch of POCs some of which survived as production code. At Helpshift, I also built a core-infra team from 2 engineers to 20 engineers. I have built planet scale (2 Bn devices) distributed systems in Clojure and Python.\nFractional leadership: Tech\nThe hacker years, I started my journey as a JS + PHP developer. Later, I joined Infinitelybeta where I learnt to build things with Clojure and Python. Infinitelybeta a product studio narrowed down on building Helphshift. I continued building quick POCs like a co-browsing experience to Android SDKs. Some of them survived to be part of the product even to this day.\nThe engineering years, The POCs I built worked for a while Helpshift hit PMF. We were on a rocketship. But some of the POCs were not built for this. Shift\nWhat I do now. Unravel.\nPresentations\nBelaying growth https://www.youtube.com/watch?v=PLOtpbdqDxY Clojure North - Concurrency workshop https://www.youtube.com/watch?v=FGxjqxXucsM\u0026t=6s Build scalable and reliable services in Clojure - Clojure North https://www.youtube.com/watch?v=sxxcDNbvCNE \\\nWhat I write about,\nLeadership for tech and craft based work War stories and lessons from building things at scale Musings about future of tech Journals of building things Visual storytelling "},{"id":1,"href":"/docs_bk/example/","title":"Example Site","section":"Docs_bks","content":" Introduction # Ferre hinnitibus erat accipitrem dixi Troiae tollens # Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad # Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol # Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque # Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":2,"href":"/docs_bk/example/table-of-contents/with-toc/","title":"With ToC","section":"Table of Contents","content":" Caput vino delphine in tamen vias # Cognita laeva illo fracta # Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\nTe at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit Natus quaerere # Pectora et sine mulcere, coniuge dum tincta incurvae. Quis iam; est dextra Peneosque, metuis a verba, primo. Illa sed colloque suis: magno: gramen, aera excutiunt concipit.\nPhrygiae petendo suisque extimuit, super, pars quod audet! Turba negarem. Fuerat attonitus; et dextra retinet sidera ulnas undas instimulat vacuae generis? Agnus dabat et ignotis dextera, sic tibi pacis feriente at mora euhoeque comites hostem vestras Phineus. Vultuque sanguine dominoque metuit risi fama vergit summaque meus clarissimus artesque tinguebat successor nominis cervice caelicolae.\nLimitibus misere sit # Aurea non fata repertis praerupit feruntur simul, meae hosti lentaque citius levibus, cum sede dixit, Phaethon texta. Albentibus summos multifidasque iungitur loquendi an pectore, mihi ursaque omnia adfata, aeno parvumque in animi perlucentes. Epytus agis ait vixque clamat ornum adversam spondet, quid sceptra ipsum est. Reseret nec; saeva suo passu debentia linguam terga et aures et cervix de ubera. Coercet gelidumque manus, doluit volvitur induta?\nEnim sua # Iuvenilior filia inlustre templa quidem herbis permittat trahens huic. In cruribus proceres sole crescitque fata, quos quos; merui maris se non tamen in, mea.\nGermana aves pignus tecta # Mortalia rudibusque caelum cognosceret tantum aquis redito felicior texit, nec, aris parvo acre. Me parum contulerant multi tenentem, gratissime suis; vultum tu occupat deficeret corpora, sonum. E Actaea inplevit Phinea concepit nomenque potest sanguine captam nulla et, in duxisses campis non; mercede. Dicere cur Leucothoen obitum?\nPostibus mittam est nubibus principium pluma, exsecratur facta et. Iunge Mnemonidas pallamque pars; vere restitit alis flumina quae quoque, est ignara infestus Pyrrha. Di ducis terris maculatum At sede praemia manes nullaque!\n"},{"id":3,"href":"/docs/speaking/","title":"Speaking","section":"Docs","content":"Hello welcome to Mugencode! I am Kapil.\nI write about,\nTech leadership in orgs War stories and lessons from building things at scale Musings about future of tech Journals of building micro products "},{"id":4,"href":"/docs_bk/example/table-of-contents/without-toc/","title":"Without ToC","section":"Table of Contents","content":" At me ipso nepotibus nunc celebratior genus # Tanto oblite # Lorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.\nQuam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque. Exul Laurenti orantem modo, per densum missisque labor manibus non colla unum, obiectat. Tu pervia collo, fessus quae Cretenque Myconon crate! Tegumenque quae invisi sudore per vocari quaque plus ventis fluidos. Nodo perque, fugisse pectora sorores.\nSumme promissa supple vadit lenius # Quibus largis latebris aethera versato est, ait sentiat faciemque. Aequata alis nec Caeneus exululat inclite corpus est, ire tibi ostendens et tibi. Rigent et vires dique possent lumina; eadem dixit poma funeribus paret et felix reddebant ventis utile lignum.\nRemansit notam Stygia feroxque Et dabit materna Vipereas Phrygiaeque umbram sollicito cruore conlucere suus Quarum Elis corniger Nec ieiunia dixit Vertitur mos ortu ramosam contudit dumque; placabat ac lumen. Coniunx Amoris spatium poenamque cavernis Thebae Pleiadasque ponunt, rapiare cum quae parum nimium rima.\nQuidem resupinus inducto solebat una facinus quae # Credulitas iniqua praepetibus paruit prospexit, voce poena, sub rupit sinuatur, quin suum ventorumque arcadiae priori. Soporiferam erat formamque, fecit, invergens, nymphae mutat fessas ait finge.\nBaculum mandataque ne addere capiti violentior Altera duas quam hoc ille tenues inquit Sicula sidereus latrantis domoque ratae polluit comites Possit oro clausura namque se nunc iuvenisque Faciem posuit Quodque cum ponunt novercae nata vestrae aratra Ite extrema Phrygiis, patre dentibus, tonso perculit, enim blanda, manibus fide quos caput armis, posse! Nocendo fas Alcyonae lacertis structa ferarum manus fulmen dubius, saxa caelum effuge extremis fixum tumor adfecit bella, potentes? Dum nec insidiosa tempora tegit spirarunt. Per lupi pars foliis, porreximus humum negant sunt subposuere Sidone steterant auro. Memoraverit sine: ferrum idem Orion caelum heres gerebat fixis?\n"},{"id":5,"href":"/docs_bk/example/table-of-contents/","title":"Table of Contents","section":"Example Site","content":" Ubi loqui # Mentem genus facietque salire tempus bracchia # Lorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice # Ora precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); Placabilis coactis nega ingemuit ignoscat nimia non # Frontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) { zif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive; gigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop), panel_point_firmware); spyware_bash.statePopApplet = express_netbios_digital( insertion_troubleshooting.brouter(recordFolderUs), 65); } recursionCoreRay = -5; if (hub == non) { portBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard), font_radcab, guidCmsScalable + reciprocalMatrixPim); left.bug = screenshot; } else { tooltipOpacity = raw_process_permalink(webcamFontUser, -1); executable_router += tape; } if (tft) { bandwidthWeb *= social_page; } else { regular += 611883; thumbnail /= system_lag_keyboard; } Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":6,"href":"/posts/webgl_core_async_kordova_drop/","title":"core.async + WebGL = korova-drop","section":"Posts","content":"korova-drop is an audio visualization project built using cljs, core.async, HTML5 and webGL.\nTry out the demo here. The source code is available here.\nFor this project I have used three.js (which is an awesome library), webGL and Audio API. This will only work on Chrome for now.\nI won\u0026rsquo;t talk about how I have used three.js with cljs in this post. This post mostly concentrates on how core.async makes handling events a whole lot easier.\nWorkflow # Since I had never used clojurescript before this project, I spent some time exploring the tools and setting up a basic workflow for cljs.\nI used the following tools for my cljs workflow.\nlein-cljsbuild is a very useful leiningen plugin that takes care of building cljs files into javascript outputs.\nPiggieback is a cljs repl that runs on nrepl. I cannot stress enough how much it improved my workflow after discovering it halfway through working on my project.\nHere is some emacs config I use to quickly start off with piggieback.\nGetting Mp3 in browser # I\u0026rsquo;ll try to compare js, cljs and cljs + core.async. Observe the difference that core.async makes to the whole structure of the code.\nLet\u0026rsquo;s start with the code that handles file drag and drop. All it does is add a couple of event handlers to a drop zone DOM element and provide a way to process files.\nfunction init_file_handling (callback) { var drop_zone = document.getElementById (\u0026#34;drop_zone\u0026#34;); drop_zone.addEventListener (\u0026#34;dragover\u0026#34;, function (e) { e.stopPropagation (); e.preventDefault (); e.dataTransfer.dropEffect = \u0026#34;copy\u0026#34;; return false; }); drop_zone.addEventListener (\u0026#34;drop\u0026#34;, function (e) { e.stopPropagation (); e.preventDefault (); callback (e.dataTransfer.files); return false; }); } A plain cljs version.\n(defn init-file-handling [callback] (let [drop-zone (by-id \u0026#34;drop_zone\u0026#34;) files-chan (chan)] (.addEventListener drop-zone \u0026#34;dragover\u0026#34; (fn [e] (.stopPropagation e) (.preventDefault e) (aset e \u0026#34;dropEffect\u0026#34; \u0026#34;dataTransfer\u0026#34; \u0026#34;copy\u0026#34;)) false) (.addEventListener drop-zone \u0026#34;drop\u0026#34; (fn [e] (.stopPropagation e) (.preventDefault e) (callback (aget e \u0026#34;dataTransfer\u0026#34; \u0026#34;files\u0026#34;))) false))) In following example, the function is just returning a files channel instead of accepting callback to process on files.\n(defn init-file-handling [] (let [drop-zone (by-id \u0026#34;drop_zone\u0026#34;) files-chan (chan)] (.addEventListener drop-zone \u0026#34;dragover\u0026#34; (fn [e] (.stopPropagation e) (.preventDefault e) (aset e \u0026#34;dropEffect\u0026#34; \u0026#34;dataTransfer\u0026#34; \u0026#34;copy\u0026#34;)) false) (.addEventListener drop-zone \u0026#34;drop\u0026#34; (fn [e] (.stopPropagation e) (.preventDefault e) (put! files-chan (aget e \u0026#34;dataTransfer\u0026#34; \u0026#34;files\u0026#34;))) false) files-chan)) Nothing impressive right? But I\u0026rsquo;ll get there soon.\nPlaying audio # Now I can process the files to play the audio\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext; var context = new AudioContext(); function loadSound(file, callback) { var reader = new FileReader(); reader.onload = function() { context.decodeAudioData(reader.result, function(buffer) { callback (buffer); }, onError); } reader.readArrayBuffer(file); } function playSound(buffer) { var source = context.createBufferSource(); source.buffer = buffer; source.connect(context.destination); source.start(0); } Lets convert this example to plain cljs\n(def audio-context (if window/webkitAudioContext (new window/webkitAudioContext) window/AudioContext)) (defn play-sound [buffer] (let [source (.createBufferSource source)] (aset source \u0026#34;buffer\u0026#34; buffer) (.connect source (aget audio-context \u0026#34;destination\u0026#34;)) (.start source 0))) (defn load-sound [file callback] (let [reader (FileReader.)] (aset reader \u0026#34;onload\u0026#34; (fn [] (.decodeAudioData audio-context (aget reader \u0026#34;result\u0026#34;) (fn [buffer] (callback buffer))))) (.readAsArrayBuffer reader file))) And now using core.async\n(def audio-context (if window/webkitAudioContext (new window/webkitAudioContext) window/AudioContext)) (defn play-sound [buffer] (let [source (.createBufferSource source)] (aset source \u0026#34;buffer\u0026#34; buffer) (.connect source (aget audio-context \u0026#34;destination\u0026#34;)) (.start source 0))) (defn local-file-\u0026gt;chan [file] (let [reader (new window/FileReader) resp-c (chan) c (chan)] (set! (.-onload reader) (fn [] (put! resp-c (.-result reader)))) (.readAsArrayBuffer reader file) (go-loop (let [resp (\u0026lt;! resp-c)] (.decodeAudioData audio-context resp #(put! c %)))) c)) There is not much of difference in any of these examples. I am just pushing the results to a channel and returning the channel instead of relying on a callback function for further processing. Why would I go through all this trouble just to play some audio file?\nLet\u0026rsquo;s get to that bit now.\nBringing it all together # Let\u0026rsquo;s use previous functions and write basic code to handle playing audio from a file dropped in drop zone.\nfunction main () { init_file_handling (function (files) { var file = files [0]; var drop_zone_wrapper = document.getElementById (\u0026#34;drop_zone_wrapper\u0026#34;); drop_zone_wrapper.addClass (\u0026#34;loading\u0026#34;); loadSound (file, function (buffer) { drop_zone_wrapper.removeClass (\u0026#34;loading\u0026#34;); drop_zone_wrapper.addClass (\u0026#34;corner\u0026#34;); playSound (buffer); }); }); } (defn -main [] (init-file-handling (fn [files] (let [file (aget files 0) drop-zone-wrapper (by-id \u0026#34;drop_zone_wrapper\u0026#34;)] (add-class drop-zone-wrapper \u0026#34;loading\u0026#34;) (load-sound file (fn [buffer] (remove-class drop-zone-wrapper \u0026#34;loading\u0026#34;) (add-class drop-zone-wrapper \u0026#34;corner\u0026#34;) (play-sound buffer))))))) In both examples it\u0026rsquo;s very hard to read and comprehend what is happening and in what order (well not for a javascripter).\nInstead of explaining what I am trying to do I am just going to add code written using core.async.\n(defn -main [] (let [files-chan (init-file-handling)] (go-loop (let [files (\u0026lt;! files-chan) file (aget files 0)] (add-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;loading\u0026#34;) (let [audio (\u0026lt;! (local-file-\u0026gt;chan file))] (remove-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;loading\u0026#34;) (add-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;corner\u0026#34;) (play-sound audio)))))) Pretty clear right? Get the file from the \u0026lsquo;files-chan\u0026rsquo;, get the audio from the file and play the sound.\nLet\u0026rsquo;s get to the fun part now.\nFrom now on I\u0026rsquo;ll just add code written using cljs + core.async.\nAnalyzing audio data # Audio api provides audio analyzers which I am going to use to vizualize audio.\n(defn sound-+\u0026gt;analyzer [source-node] (let [analyzer (.createAnalyser audio-context)] (set! (.-fftSize analyzer) 1024) (set! (.-smoothingTimeConstant analyzer) 0.7) (.connect source-node analyzer) (.connect analyzer (.-destination audio-context)) analyzer)) (defn -main [] (let [files-chan (init-file-handling) audio-chan (chan)] (go-loop (let [files (\u0026lt;! files-chan) file (aget files 0)] (add-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;loading\u0026#34;) (let [audio (\u0026lt;! (local-file-\u0026gt;chan file))] (remove-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;loading\u0026#34;) (add-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;corner\u0026#34;) (remove-class (by-id \u0026#34;progress-bar-wrapper\u0026#34;) \u0026#34;hidden\u0026#34;) (aset (by-id \u0026#34;progress\u0026#34;) \u0026#34;style\u0026#34; \u0026#34;0%\u0026#34;) (put! audio-chan audio)))) (go (loop [audio-source nil] (let [buff (\u0026lt;! audio-chan) source-node (play-sound-buff buff)] (when audio-source (.noteOff audio-source 0)) (sound-+\u0026gt;analyzer source-node) (recur source-node)))))) I create an analyzer node. Right now I don\u0026rsquo;t do anything with it. Later on I\u0026rsquo;ll use it to render audio spectrum data.\nRendering stuff # Modern browsers provide an API for UI loop called \u0026lsquo;requestAnimationFrame\u0026rsquo;. I\u0026rsquo;ll create a UI channel to read available frames.\n\u0026lsquo;render-stuff\u0026rsquo; is just a generic function which gets audio data to render the spectrum data.\n(defn animloop [ui-chan ts] (.requestAnimationFrame js/window (partial animloop ui-chan)) (put! ui-chan ts)) (defn -main [] (let [files-chan (init-file-handling) audio-chan (chan) ui-chan (chan) analyzer (atom nil)] (animloop ui-chan 0) (go-loop (let [files (\u0026lt;! files-chan) file (aget files 0)] (add-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;loading\u0026#34;) (let [audio (\u0026lt;! (local-file-\u0026gt;chan file))] (remove-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;loading\u0026#34;) (add-class (by-id \u0026#34;drop_zone_wrapper\u0026#34;) \u0026#34;corner\u0026#34;) (remove-class (by-id \u0026#34;progress-bar-wrapper\u0026#34;) \u0026#34;hidden\u0026#34;) (aset (by-id \u0026#34;progress\u0026#34;) \u0026#34;style\u0026#34; \u0026#34;0%\u0026#34;) (put! audio-chan audio)))) (go (loop [audio-source nil] (let [buff (\u0026lt;! audio-chan) source-node (play-sound-buff buff)] (put! progress-chan {:type :duration :val (aget buff \u0026#34;duration\u0026#34;)}) (when audio-source (.noteOff audio-source 0)) (reset! analyzer (sound-+\u0026gt;analyzer source-node)) (recur source-node)))) (go (loop [prev-data nil] (let [frame-time (\u0026lt;! ui-chan)] (if @analyzer (do (let [arr (new window/Uint8Array (.-innerWidth js/window))] (.getByteFrequencyData @analyzer arr) (let [audio-data (for [i (range (.-length arr))] (aget arr i))] (recur (render-stuff audio-data prev-data))))) (recur prev-data))))))) Conclusion # core.async makes code structure readable and hence easy to manage.\nPlease comment for suggestions on github or send a pull request.\nResources and further reading. # Core.async documentation Core.async examples by David Nolen Awesome Dots game by Bruce Hauman korova-drop Source "},{"id":7,"href":"/docs_bk/example/collapsed/3rd-level/4th-level/","title":"4th Level","section":"3rd Level","content":" 4th Level of Menu # Caesorum illa tu sentit micat vestes papyriferi # Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":8,"href":"/docs_bk/example/collapsed/3rd-level/","title":"3rd Level","section":"Collapsed","content":" 3rd Level of Menu # Nefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral), northbridge_services_troubleshooting, personal( firmware_rw.trash_rw_crm.device(interactive_gopher_personal, software, -1), megabit, ergonomicsSoftware(cmyk_usb_panel, mips_whitelist_duplex, cpa))); if (5) { managementNetwork += dma - boolean; kilohertz_token = 2; honeypot_affiliate_ergonomics = fiber; } mouseNorthbridge = byte(nybble_xmp_modem.horse_subnet( analogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet), gateway_ospf), repository.domain_key.mouse(serverData(fileNetwork, trim_duplex_file), cellTapeDirect, token_tooltip_mashup( ripcordingMashup))); module_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) + coreLog.joystick(componentUdpLink), windows_expansion_touchscreen); bashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling( ciscNavigationBacklink, table + cleanDriver), indexProtocolIsp); "},{"id":9,"href":"/docs_bk/example/hidden/","title":"Hidden","section":"Example Site","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":10,"href":"/docs_bk/shortcodes/buttons/","title":"Buttons","section":"Shortcodes","content":" Buttons # Buttons are styled links that can lead to local page or external link.\nExample # {{\u0026lt; button relref=\u0026#34;/\u0026#34; [class=\u0026#34;...\u0026#34;] \u0026gt;}}Get Home{{\u0026lt; /button \u0026gt;}} {{\u0026lt; button href=\u0026#34;https://github.com/alex-shpak/hugo-book\u0026#34; \u0026gt;}}Contribute{{\u0026lt; /button \u0026gt;}} Get Home Contribute "},{"id":11,"href":"/docs_bk/shortcodes/columns/","title":"Columns","section":"Shortcodes","content":" Columns # Columns help organize shorter pieces of content horizontally for readability.\n{{\u0026lt; columns \u0026gt;}} \u0026lt;!-- begin columns block --\u0026gt; # Left Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Mid Content Lorem markdownum insigne... \u0026lt;---\u0026gt; \u0026lt;!-- magic separator, between columns --\u0026gt; # Right Content Lorem markdownum insigne... {{\u0026lt; /columns \u0026gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nMid Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!\nRight Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":12,"href":"/docs_bk/shortcodes/details/","title":"Details","section":"Shortcodes","content":" Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.\nExample # {{\u0026lt; details \u0026#34;Title\u0026#34; [open] \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} {{\u0026lt; details title=\u0026#34;Title\u0026#34; open=true \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /details \u0026gt;}} Title Markdown content # Lorem markdownum insigne\u0026hellip;\n"},{"id":13,"href":"/docs_bk/shortcodes/expand/","title":"Expand","section":"Shortcodes","content":" Expand # Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.\nExample # Default # {{\u0026lt; expand \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}} Expand ↕ Markdown content # Lorem markdownum insigne\u0026hellip;\nWith Custom Label # {{\u0026lt; expand \u0026#34;Custom Label\u0026#34; \u0026#34;...\u0026#34; \u0026gt;}} ## Markdown content Lorem markdownum insigne... {{\u0026lt; /expand \u0026gt;}} Custom Label ... Markdown content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":14,"href":"/docs_bk/shortcodes/hints/","title":"Hints","section":"Shortcodes","content":" Hints # Hint shortcode can be used as hint/alerts/notification block.\nThere are 3 colors to choose: info, warning and danger.\n{{\u0026lt; hint [info|warning|danger] \u0026gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{\u0026lt; /hint \u0026gt;}} Example # Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa "},{"id":15,"href":"/docs_bk/shortcodes/mermaid/","title":"Mermaid","section":"Shortcodes","content":" Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.\nOverride Mermaid Initialization Config\nTo override the initialization config for Mermaid, create a mermaid.json file in your assets folder!\nExample # {{\u0026lt; mermaid class=\u0026#34;optional\u0026#34; \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. {{\u0026lt; /mermaid \u0026gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u003e State2 note left of State2 : This is the note to the left. "},{"id":16,"href":"/docs_bk/shortcodes/section/","title":"Section","section":"Shortcodes","content":" Section # Section renders pages in section as definition list, using title and description. Optional param summary can be used to show or hide page summary\nExample # {{\u0026lt; section [summary] \u0026gt;}} First Page First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nSecond Page Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":17,"href":"/docs_bk/shortcodes/section/first-page/","title":"First Page","section":"Section","content":" First page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":18,"href":"/docs_bk/shortcodes/section/second-page/","title":"Second Page","section":"Section","content":" Second Page # Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"id":19,"href":"/docs_bk/shortcodes/tabs/","title":"Tabs","section":"Shortcodes","content":" Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.\n{{\u0026lt; tabs \u0026#34;uniqueid\u0026#34; \u0026gt;}} {{\u0026lt; tab \u0026#34;MacOS\u0026#34; \u0026gt;}} # MacOS Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Linux\u0026#34; \u0026gt;}} # Linux Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; tab \u0026#34;Windows\u0026#34; \u0026gt;}} # Windows Content {{\u0026lt; /tab \u0026gt;}} {{\u0026lt; /tabs \u0026gt;}} Example # MacOS MacOS # This is tab MacOS content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nLinux Linux # This is tab Linux content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\nWindows Windows # This is tab Windows content.\nLorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes. Miseratus fonte Ditis conubia.\n"},{"id":20,"href":"/docs_bk/shortcodes/katex/","title":"KaTeX","section":"Shortcodes","content":" KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX\nExample # {{\u0026lt; katex display=true class=\u0026#34;optional\u0026#34; \u0026gt;}} f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi {{\u0026lt; /katex \u0026gt;}} \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\] Display Mode Example # Here is some inline example: \\(\\pi(x)\\) , rendered in the same line. And below is display example, having display: block \\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\] Text continues here.\n"}]